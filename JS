let dna = "ATGCGTACGTAG";
let mrna = "";

function transcribe() {
  mrna = dna
    .replace(/A/g, "Utemp")
    .replace(/T/g, "A")
    .replace(/C/g, "G")
    .replace(/G/g, "C")
    .replace(/Utemp/g, "U");
  document.getElementById("mrnaOutput").innerText = "mRNA: " + mrna;
}

async function animateTranscription() {
  let result = "";
  document.getElementById("mrnaOutput").innerText = "mRNA: ";
  for (let i = 0; i < dna.length; i++) {
    let rna = convertBase(dna[i]);
    result += rna;
    await delay(300);
    document.getElementById("mrnaOutput").innerText = "mRNA: " + result;
  }
  mrna = result;
}

function convertBase(base) {
  switch (base) {
    case "A": return "U";
    case "T": return "A";
    case "C": return "G";
    case "G": return "C";
    default: return "?";
  }
}

function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

const codonTable = {
  UUU: "Phe", UUC: "Phe", UUA: "Leu", UUG: "Leu",
  CUU: "Leu", CUC: "Leu", CUA: "Leu", CUG: "Leu",
  AUU: "Ile", AUC: "Ile", AUA: "Ile", AUG: "Met",
  GUU: "Val", GUC: "Val", GUA: "Val", GUG: "Val",
  UCU: "Ser", UCC: "Ser", UCA: "Ser", UCG: "Ser",
  CCU: "Pro", CCC: "Pro", CCA: "Pro", CCG: "Pro",
  ACU: "Thr", ACC: "Thr", ACA: "Thr", ACG: "Thr",
  GCU: "Ala", GCC: "Ala", GCA: "Ala", GCG: "Ala",
  UAU: "Tyr", UAC: "Tyr", UAA: "Stop", UAG: "Stop",
  CAU: "His", CAC: "His", CAA: "Gln", CAG: "Gln",
  AAU: "Asn", AAC: "Asn", AAA: "Lys", AAG: "Lys",
  GAU: "Asp", GAC: "Asp", GAA: "Glu", GAG: "Glu",
  UGU: "Cys", UGC: "Cys", UGA: "Stop", UGG: "Trp",
  CGU: "Arg", CGC: "Arg", CGA: "Arg", CGG: "Arg",
  AGU: "Ser", AGC: "Ser", AGA: "Arg", AGG: "Arg",
  GGU: "Gly", GGC: "Gly", GGA: "Gly", GGG: "Gly"
};

function translation() {
  if (!mrna) {
    document.getElementById("proteinOutput").innerText = "Please transcribe DNA first.";
    return;
  }

  let protein = "";
  for (let i = 0; i < mrna.length; i += 3) {
    const codon = mrna.slice(i, i + 3);
    const amino = codonTable[codon] || "Unknown";
    if (amino === "Stop") break;
    protein += amino + " - ";
  }

  document.getElementById("proteinOutput").innerText = "Protein: " + protein.slice(0, -3);
}

async function animateTranslation() {
  if (!mrna) {
    document.getElementById("proteinOutput").innerText = "Please transcribe DNA first.";
    return;
  }

  let protein = "";
  document.getElementById("proteinOutput").innerText = "Protein: ";
  for (let i = 0; i < mrna.length; i += 3) {
    const codon = mrna.slice(i, i + 3);
    const amino = codonTable[codon] || "Unknown";
    if (amino === "Stop") break;
    protein += amino + " - ";
    await delay(400);
    document.getElementById("proteinOutput").innerText = "Protein: " + protein.slice(0, -3);
  }
}
